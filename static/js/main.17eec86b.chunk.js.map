{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","winningSquare","backgroundColor","value","Board","i","this","winner","includes","squares","square","j","concat","renderSquare","rows","renderRow","React","Component","Game","state","history","Array","fill","allLocations","stepNumber","xIsNext","ASCisNext","slice","length","calculateWinner","setState","step","reverse","status","current","moves","map","move","desc","parseInt","jumpTo","fontWeight","namewinner","alert","sort","handleClick","winnerSquares","Sort","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17eec86b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button \r\n    className=\"square\" \r\n    onClick={props.onClick}\r\n    style = {props.winningSquare ? {backgroundColor:'cyan'} : null }>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nclass Board extends React.Component {\r\n  \r\n  renderSquare(i) {\r\n    let winningSquare = this.props.winner && this.props.winner.includes(i) ? true : false;\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        winningSquare = {winningSquare}\r\n      />\r\n    );\r\n  };\r\n  \r\n  renderRow(i){\r\n    let square = [];\r\n    for(let j = 0; j < 3;j++){\r\n      square = square.concat([(this.renderSquare(i*3 + j))]);\r\n    }\r\n    return (\r\n    <div className = \"board-row\">\r\n      {square}\r\n    </div> \r\n    );\r\n  }\r\n  render() {\r\n    let rows = [];\r\n    for(let i = 0;i < 3;i++){\r\n      rows = rows.concat([this.renderRow(i)]);\r\n    }\r\n    return (\r\n      <div>\r\n      {rows}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        allLocations: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      ASCisNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        allLocations: i,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  \r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  Sort(){\r\n    const {history, ASCisNext} = this.state;\r\n    this.setState({\r\n      history: history.reverse(),\r\n      ASCisNext: !ASCisNext,\r\n    });\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + calculateLocation(step.allLocations) :\r\n        'Go to game start';\r\n      return (\r\n        <li key = {move}>\r\n          <button \r\n          onClick={() => this.jumpTo(move)}\r\n          style = {this.state.stepNumber === move ? {fontWeight : 'bold'} : {fontWeight: 'normal'}}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.namewinner;\r\n    } else if(!checkNULL(current.squares)){\r\n      alert(\"The match is draw !!!\");\r\n    }\r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    let sort = this.state.ASCisNext ? 'ASC' : 'DES';\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winner = {winner && winner.winnerSquares}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        <div className = \"game-info\">\r\n        <div>Sort</div>\r\n        <button onClick = {() => this.Sort()}>{sort}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        namewinner: squares[a],\r\n        winnerSquares: lines[i]\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction calculateLocation(i){\r\n  return `(${parseInt(i/3)},${parseInt(i%3)})`;\r\n}\r\nfunction checkNULL(square){\r\n  return square.includes(null);\r\n}\r\n"],"sourceRoot":""}